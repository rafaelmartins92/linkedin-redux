{"version":3,"sources":["features/userSlice.js","components/HeaderOption/HeaderOption.js","firebase.js","components/Header/Header.js","components/Sidebar/Sidebar.js","components/InputOptions/InputOptions.js","components/Post/Post.js","components/Feed/Feed.js","components/Login/Login.js","components/Widgets/Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoUrl","displayName","toUpperCase","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","alt","type","placeholder","HomeIcon","SupervisorAccountIcon","WorkIcon","SmsIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","emaik","InputOptions","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","MessageOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","posts","setPosts","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","email","timestamp","FieldValue","serverTimestamp","ImageIcon","YouTubeIcon","EventIcon","VerticalSplitIcon","Login","setName","profilePic","setProfilePic","setEmail","password","setPassword","signInWithEmailAndPassword","then","userAuth","uid","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07b523fb.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./HeaderOption.css\";\n\nimport { selectUser } from \"../../features/userSlice\";\n\nimport { Avatar } from \"@material-ui/core\";\n\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\n  const user = useSelector(selectUser);\n\n  return (\n    <div className=\"headerOption\" onClick={onClick}>\n      {Icon && <Icon className=\"headerOption-icon\" />}\n      {avatar && (\n        <Avatar src={user?.photoUrl} className=\"headerOption-icon\">\n          {user?.displayName && user?.displayName[0].toUpperCase()}\n        </Avatar>\n      )}\n      <h3 className=\"headerOption-title\">{title}</h3>\n    </div>\n  );\n}\n\nexport default HeaderOption;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDuZvdpPxIcCeCa7YA_ev9PS2X1wB9nXhg\",\n  authDomain: \"linkedin-redux.firebaseapp.com\",\n  projectId: \"linkedin-redux\",\n  storageBucket: \"linkedin-redux.appspot.com\",\n  messagingSenderId: \"341023511216\",\n  appId: \"1:341023511216:web:cf002c7bdceb85b2a16175\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./Header.css\";\n\nimport HeaderOption from \"../HeaderOption/HeaderOption\";\nimport { auth } from \"../../firebase\";\nimport { logout } from \"../../features/userSlice\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport SmsIcon from \"@material-ui/icons/Sms\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\n\nfunction Header() {\n  const dispatch = useDispatch();\n\n  function logoutOfApp() {\n    dispatch(logout());\n    auth.signOut();\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-left\">\n        <img src=\"icon.png\" alt=\"\" />\n\n        <div className=\"header-search\">\n          <SearchIcon />\n          <input type=\"text\" placeholder=\"Pesquisar\" />\n        </div>\n      </div>\n      <div className=\"header-right\">\n        <HeaderOption Icon={HomeIcon} title=\"Início\" />\n        <HeaderOption Icon={SupervisorAccountIcon} title=\"Minha rede\" />\n        <HeaderOption Icon={WorkIcon} title=\"Vagas\" />\n        <HeaderOption Icon={SmsIcon} title=\"Mensagens\" />\n        <HeaderOption Icon={NotificationsIcon} title=\"Notificações\" />\n        <HeaderOption avatar={true} title=\"Eu\" onClick={logoutOfApp} />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./Sidebar.css\";\n\nimport { selectUser } from \"../../features/userSlice\";\n\nimport { Avatar } from \"@material-ui/core\";\n\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n\n  const recentItem = (topic) => (\n    <div className=\"sidebar-recentItem\">\n      <span className=\"sidebar-hashtag\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-top\">\n        <img src={user?.photoUrl ? user?.photoUrl : \"icon.png\"} alt=\"\" />\n        <Avatar src={user?.photoUrl} className=\"sidebar-avatar\">\n          {user?.displayName && user?.displayName[0].toUpperCase()}\n        </Avatar>\n        <h2>{user?.displayName}</h2>\n        <h4>{user?.emaik}</h4>\n      </div>\n\n      <div className=\"sidebar-stats\">\n        <div className=\"sidebar-stat\">\n          <p>Quem viu seu perfil</p>\n          <p className=\"sidebar-statNumber\">251</p>\n        </div>\n        <div className=\"sidebar-stat\">\n          <p>Viram sua publicação</p>\n          <p className=\"sidebar-statNumber\">1.555</p>\n        </div>\n      </div>\n      <div className=\"sidebar-bottom\">\n        <p>Recentes</p>\n        {recentItem(\"React JS\")}\n        {recentItem(\"React Native\")}\n        {recentItem(\"Node.js\")}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\n\nimport \"./InputOptions.css\";\n\nfunction InputOptions({ Icon, title, color }) {\n  return (\n    <div className=\"inputOption\">\n      <Icon style={{ color: color }} />\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default InputOptions;\n","import React, { forwardRef } from \"react\";\n\nimport \"./Post.css\";\n\nimport InputOptions from \"../InputOptions/InputOptions\";\n\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport MessageOutlinedIcon from \"@material-ui/icons/MessageOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\n\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\n  return (\n    <div ref={ref} className=\"post\">\n      <div className=\"post-header\">\n        <Avatar src={photoUrl} />\n        <div className=\"post-info\">\n          <h2>{name}</h2>\n          <p>{description}</p>\n        </div>\n      </div>\n\n      <div className=\"post-body\">\n        <p>{message}</p>\n      </div>\n\n      <div className=\"post-buttons\">\n        <InputOptions\n          Icon={ThumbUpAltOutlinedIcon}\n          title=\"Gostei\"\n          color=\"gray\"\n        />\n        <InputOptions\n          Icon={MessageOutlinedIcon}\n          title=\"Comentar\"\n          color=\"gray\"\n        />\n        <InputOptions\n          Icon={ShareOutlinedIcon}\n          title=\"Compartilhar\"\n          color=\"gray\"\n        />\n        <InputOptions Icon={SendOutlinedIcon} title=\"Enviar\" color=\"gray\" />\n      </div>\n    </div>\n  );\n});\n\nexport default Post;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useSelector } from \"react-redux\";\nimport FlipMove from \"react-flip-move\";\n\nimport \"./Feed.css\";\n\nimport InputOptions from \"../InputOptions/InputOptions\";\nimport Post from \"../Post/Post\";\nimport { db } from \"../../firebase\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\n\nfunction Feed() {\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  function sendPost(e) {\n    e.preventDefault();\n\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setInput(\"\");\n  }\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed-inputContainer\">\n        <div className=\"feed-input\">\n          <CreateIcon />\n          <form>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n              placeholder=\"Começar publicação\"\n            />\n            <button onClick={sendPost} type=\"submit\">\n              Enviar\n            </button>\n          </form>\n        </div>\n        <div className=\"feed-inputOptions\">\n          <InputOptions Icon={ImageIcon} title=\"Foto\" color=\"#70b5f9\" />\n          <InputOptions Icon={YouTubeIcon} title=\"Video\" color=\"#7fc15e\" />\n          <InputOptions Icon={EventIcon} title=\"Evento\" color=\"#e7a33e\" />\n          <InputOptions\n            Icon={VerticalSplitIcon}\n            title=\"Escrever artigo\"\n            color=\"#F6987D\"\n          />\n        </div>\n      </div>\n\n      <FlipMove>\n        {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\n          <Post\n            key={id}\n            name={name}\n            description={description}\n            message={message}\n            photoUrl={photoUrl}\n          />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default Feed;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./Login.css\";\n\nimport { auth } from \"../../firebase\";\nimport { login } from \"../../features/userSlice\";\n\nfunction Login() {\n  const [name, setName] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  function loginToApp(e) {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        dispatch(\n          login({\n            email: userAuth.user.email,\n            uid: userAuth.user.uid,\n            displayName: userAuth.user.displayName,\n            photoUrl: userAuth.user.photoURL,\n          })\n        );\n      })\n      .catch((error) => alert(error));\n  }\n\n  function register() {\n    if (!name) {\n      return alert(\"Por favor, insira o  nome completo!\");\n    }\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: name,\n            photoURL: profilePic,\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: name,\n                photoURL: profilePic,\n              })\n            );\n          });\n      })\n      .catch((error) => alert(error));\n  }\n\n  return (\n    <div className=\"login\">\n      <img src=\"logo.png\" alt=\"\" />\n\n      <form>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          placeholder=\"Nome completo (obrigatório)\"\n        />\n        <input\n          value={profilePic}\n          onChange={(e) => setProfilePic(e.target.value)}\n          type=\"text\"\n          placeholder=\"Foto do perfil URL (opcional)\"\n        />\n        <input\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          type=\"email\"\n          placeholder=\"Email (obrigatório)\"\n        />\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n          placeholder=\"Senha (obrigatória)\"\n        />\n\n        <button type=\"submit\" onClick={loginToApp}>\n          Entrar\n        </button>\n      </form>\n      <p>\n        Novo no LinkedRM?{\" \"}\n        <span className=\"login-register\" onClick={register}>\n          Cadastre-se\n        </span>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\n\nimport \"./Widgets.css\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n\nfunction Widgets() {\n  const newsArticle = (heading, subtitle) => (\n    <div className=\"widgets-article\">\n      <div className=\"widgets-articleLeft\">\n        <FiberManualRecordIcon />\n      </div>\n      <div className=\"widgets-articleRight\">\n        <h4>{heading}</h4>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"widgets\">\n      <div className=\"widgets-header\">\n        <h2>LikedRM Notícias</h2>\n        <InfoIcon />\n      </div>\n\n      {newsArticle(\n        \"Covid-19: as últimas notícias sobre as vacinas\",\n        \"Notícias mais lidas • 3976 leitores\"\n      )}\n      {newsArticle(\n        \"Ibovespa hoje: Gol (GOLL4), Weg (WEGE3) e Hapvida (HAPV3) são os destaques negativos do dia\",\n        \"Há 3h • 368 leitores\"\n      )}\n      {newsArticle(\n        \"Brasil criou 401 mil vagas em fevereiro\",\n        \"Há 1d • 382 leitores\"\n      )}\n    </div>\n  );\n}\n\nexport default Widgets;\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./components/Header/Header\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Feed from \"./components/Feed/Feed\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Widgets from \"./components/Widgets/Widgets\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoUrl: userAuth.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app-body\">\r\n          <Sidebar />\r\n          <Feed />\r\n          <Widgets />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}